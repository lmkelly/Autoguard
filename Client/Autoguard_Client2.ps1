#Prompts user to select config file generated by backend, creates new line for client private key and cleans up .wg directory

$Directory = "C:\Users\arest\Downloads"

#This function allows a dialog box to pop up for user to select the config file to be used
Function Get-FileName($Directory)
{
    [System.Reflection.Assembly]::LoadWithPartialName("System.windows.forms") | Out-Null

  $OpenFileDialog = New-Object System.Windows.Forms.OpenFileDialog
  $OpenFileDialog.initialDirectory = $Directory
  $OpenFileDialog.filter = "Config (*.conf) | *.conf"
  $OpenFileDialog.ShowDialog() | Out-Null
  $Name = $OpenFileDialog.FileName
  $fileContent = Get-Content $Name
  #Grabs previously generated private key
  $pvt_key = Get-Content "C:\.wg\pvt.tmp"
  #Formats new private key line for config file
  $textToAdd = "`nPrivateKey = $pvt_key"
  $fileContent[0] += $textToAdd
  $fileContent | Set-Content $Name
  #Moves config file to wireguard configuration dumb folder
  mv $Name "C:\Program Files\WireGuard\Data\Configurations"
}

#Cleans up old config files
Get-FileName
$hostname = $env:COMPUTERNAME
rm C:\.wg\pub.tmp
rm C:\.wg\pvt.tmp
rm "C:\.wg\$hostname-config.txt"
